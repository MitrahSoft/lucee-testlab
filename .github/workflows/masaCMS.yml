name: Run MasaCMS test suite

on:
  workflow_dispatch:
    inputs:
      compile:
        required: false
        default: false
        type: boolean
  workflow_call:

jobs:
  setup-MasaCMS:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout MasaCMS Repository
      uses: actions/checkout@v4
      with:
        repository: MasaCMS/MasaCMS
    - name: Checkout
      uses: actions/checkout@v4
      with:
        path: _custom
    - name: Copy custom test runner tweaks
      run: |
        cp -a _custom/custom/masacms/.CFconfig.json .
        cp -R _custom/custom/masacms/core/tests/* core/tests
        mkdir plugins
        cp _custom/custom/masacms/plugins/* plugins
        cp _custom/custom/masacms/config/* config
        mkdir core/vendor/testbox
        mkdir core/tests/testbox
        cd _custom
        wget https://downloads.ortussolutions.com/ortussolutions/testbox/2.2.0/testbox-2.2.0.zip
        unzip testbox-2.2.0.zip
        cp -R testbox/* ../core/vendor/testbox
        cp -R testbox/* ../core/tests
        ls -l ../core/tests/testbox
        
        rm -rf _custom
    - name: Set up JDK 11
      uses: actions/setup-java@v4
      with:
        java-version: 11
        distribution: 'temurin'
    - name: Install the ortus security key
      run: curl -fsSl https://downloads.ortussolutions.com/debs/gpg | gpg --dearmor | sudo tee /usr/share/keyrings/ortussolutions.gpg > /dev/null
   
    - name: Add the commandbox source
      run: echo "deb [signed-by=/usr/share/keyrings/ortussolutions.gpg] https://downloads.ortussolutions.com/debs/noarch /" | sudo tee /etc/apt/sources.list.d/commandbox.list
 
    - name: Update apt and install commandbox
      run: sudo apt-get update && sudo apt-get install apt-transport-https commandbox
 
    - name: Install dependencies
      run: box install verbose=true
    - name: Store installed webroot for matrix steps
      uses: actions/upload-artifact@v4
      with:
        name: webroot
        path: ${{ github.workspace }}
    
  tests:
    runs-on: ubuntu-latest
    needs: [ setup-MasaCMS ]
    strategy:
      fail-fast: false
      matrix:
        luceeVersion: [ 5.4/snapshot/jar, 6.0/snapshot/jar, 6.1/snapshot/jar ]
        javaVersion: [ 11, 21 ]
        exclude: 
            - luceeVersion: 5.4/snapshot/jar
              javaVersion: 21
            - luceeVersion: 6.0/snapshot/jar
              javaVersion: 21
    env:
      compile: ${{ github.event.inputs.compile }}
    steps:
     - name: Restore pre-prepared webroot
       uses: actions/download-artifact@v4
       with:
         name: webroot
         path: ${{ github.workspace }}
     - name: Set up JDK ${{matrix.javaVersion}}
       uses: actions/setup-java@v4
       with:
         java-version: ${{matrix.javaVersion}}
         distribution: 'temurin'
     - name: Set up MySQL (local)
       run: |
          sudo systemctl start mysql
          mysql -e 'CREATE DATABASE masacms' -uroot -proot
          mysql -e 'CREATE USER "masacms"@"localhost" IDENTIFIED WITH mysql_native_password BY "preside";' -uroot -proot
          mysql -e 'GRANT ALL PRIVILEGES ON masacms.* TO "masacms"@"localhost"' -uroot -proot
     - name: Cache Maven packages
       uses: actions/cache@v4
       with:
          path: ~/.m2
          key: maven-cache
     - name: Cache Lucee files
       uses: actions/cache@v4
       with:
          path: /home/runner/work/_actions/lucee/script-runner/main/lucee-download-cache
          key: lucee-downloads
     - name: Run Test Suite
       uses: lucee/script-runner@main
       with:
          webroot: ${{ github.workspace }}/
          execute: /core/tests//runner.cfm
          luceeVersionQuery: ${{ matrix.luceeVersion }}
          compile: ${{env.compile}}
       env:
          DB_PORT: 3306
          DB_HOST: localhost
          DB_USER: masacms
          DB_PASSWORD: masacms
          DB_NAME: masacms
